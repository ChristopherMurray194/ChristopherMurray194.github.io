const gulp = require("gulp");
const plumber = require("gulp-plumber");
const htmlPartial = require("./gulp-html-partial");

/* Base paths relative to gulpfile.js */
const bsp = "../../"; 	// Base Src Path
const bbp = "../../";	// Base Build Path
const basePartialsPath = "../../common/partials/";

/**
* Builds the partials for a given HTML file.
*
* @param {string} srcPath - The file path to the source file.
* @param {string} buildPath - The file path to the folder for the output of the task.
* @param {string} fileName - The name of the input source file containing partials to be built.
*/
function buildTask(srcPath, buildPath, fileName)
{
	gulp.src([srcPath + fileName])
	.pipe(plumber())
	.pipe(htmlPartial(
	{
		basePath: basePartialsPath
	}))
	.pipe(gulp.dest(buildPath));
}

// Build the partials for the homepage
gulp.task("index", buildTask(bsp, bbp, "index.html"));
// Build the partials for the final project page
gulp.task("finalProject", buildTask(
							bsp + "Projects/",
							bbp + "Projects/",
							"final_project.html"
							));
// Build the partials for the village defender project page
gulp.task("villageDefenderProject", buildTask(
							bsp + "Projects/VillageDefender/",
							bbp + "Projects/VillageDefender/",
							"villagedefender.html"
							));
/*
gulp.task("index", function () 
{
    gulp.src([baseSrcPath + "/*.html"])
        .pipe(plumber())
        .pipe(htmlPartial(
		{
            basePath: baseSrcPath + "/common/partials/"
        }))
        .pipe(gulp.dest(baseDistPath));
});
*/

// Task for `gulp` command - run `gulp build-partials`
gulp.task("build-partials", ["index", "finalProject", "villageDefenderProject"]);
